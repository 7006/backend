use Mix.Config

config :cadet,
  identity_providers: %{
    "nusnet_id" =>
      {Cadet.Auth.Providers.LumiNUS,
       %{
         api_key: "",
         module_code: "CS1101S"
       }},
    "cognito" =>
      {Cadet.Auth.Providers.OpenID,
       %{
         # This should match a key in openid_connect_providers below
         openid_provider: :cognito,
         # You may need to write your own claim extractor for other providers
         claim_extractor: Cadet.Auth.Providers.CognitoClaimExtractor
       }},
    "test" =>
      {Cadet.Auth.Providers.Config,
       [
         %{
           token: "admin_token",
           code: "admin_code",
           name: "Test Admin",
           username: "admin",
           role: :admin
         },
         %{
           token: "staff_token",
           code: "staff_code",
           name: "Test Staff",
           username: "staff",
           role: :staff
         },
         %{
           token: "student_token",
           code: "student_code",
           name: "Test Student",
           username: "student",
           role: :student
         }
       ]}
  },
  # See https://hexdocs.pm/openid_connect/readme.html
  openid_connect_providers: [
    cognito: [
      discovery_document_uri: "",
      client_id: "",
      client_secret: "",
      response_type: "code",
      scope: "openid profile"
    ]
  ],
  updater: [
    cs1101s_repository: "git@github.com:cs1101s/cs1101s.git",
    cs1101s_rsa_key: "/home/user/.ssh/cs1101s"
  ],
  autograder: [
    lambda_name: "autograderLambdaName"
  ],
  uploader: [
    sourcecasts_bucket: "env-cadet-sourcecasts"
  ]

config :sentry,
  dsn: "https://public_key/sentry.io/somethingsomething"
